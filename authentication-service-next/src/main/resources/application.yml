server:
  port: 9000 #8901

eureka:
  instance:
    preferIpAddress: true
    metadataMap:
      user.name: ${spring.security.user.name}
      user.password: ${spring.security.user.password}
  client:
    enabled: false
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

spring:
  application:
    name: authentication-service
  cloud:
    config:
      enabled: false
  #config:
  #  import: optional:configserver:http://dummy-configserver/
  data:
    redis:
      #port: 6379
      cluster:
        nodes: 10.228.131.133:6379
  security:
    user:
      name: actuator
      password: actuator
      roles: ACTUATOR
    oauth2:
      authorizationserver:
        client:
          oidc-client:
            registration:
              clientId: "eagleeye"
              clientSecret: "{noop}thisissecret"
              clientAuthenticationMethods:
                - "client_secret_basic"
              authorizationGrantTypes:
                - "authorization_code"
                - "client_credentials"
                - "refresh_token"
              scopes:
                - "webclient"
                - "mobileclient"
              redirectUris:
                - http://dummy-redirect-uri # not used by server
            token:
              accessTokenFormat: reference #self-contained
              accessTokenTimeToLive: 43200s
            #requireAuthorizationConsent: true
          articles-client:
            registration:
              clientId: "articles-client"
              clientSecret: "{noop}secret"
              clientAuthenticationMethods:
                - "client_secret_basic"
              authorizationGrantTypes:
                - "authorization_code"
                - "client_credentials"
                - "refresh_token"
              scopes:
                - "openid"
                - "articles.read"
              redirectUris:
                - http://127.0.0.1:8080/login/oauth2/code/articles-client-oidc
                - http://127.0.0.1:8080/authorized
            token:
              accessTokenFormat: self-contained
              accessTokenTimeToLive: 43200s
            #requireAuthorizationConsent: true
management:
  endpoints:
    web:
      exposure:
        include: "*"

logging:
  level:
    com.netflix: WARN
    org.springframework.web: trace
    org.springframework.security: trace
    org.springframework.security.oauth2: trace
